# this script is sourced as part of the looker startup script
# blame: barry@productops.com jan 2016
# BOLT-1611 deploy a looker jar via Sagoku
# /home/looker/looker/lookerstart.cfg

if [ -e /etc/profile.d/appdynamics.sh ] ; then
    . /etc/profile.d/appdynamics.sh
fi
if [ -e /etc/profile.d/sagoku.sh ] ; then
    . /etc/profile.d/sagoku.sh
fi
if [ -e /etc/profile.d/tomcat.sh ] ; then
    . /etc/profile.d/tomcat.sh
fi

# looker recommends leaving 1.5G for "everything else"
G6=6000000
G3=3000000
G1=1500000
MEM=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
# but they don't know all the other crap that runs in a sagoku instance
# an "empty" box with no looker at all installed uses 2.5G
if [ $MEM -gt $G6 ] ; then 
	# if we've got more than 6G then leave 3G for the rest
	JM=`expr $MEM - $G3`   
else 
	# if we've got less than 6G total, then leave half for the rest
	# NOTE WELL: if you have less than 3G total, 
	#    This Will Likely Result In A Failing Looker Box.  
	#    YOU HAVE BEEN WARNED.
	JM=`expr $MEM / 2`   
fi
# okay, now set the memory arg
# this is used later as
#  -Xms$JAVAMEM -Xmx$JAVAMEM 
JAVAMEM="${JM}k"

# these are the args that spencer gives eme
EME_JARGS="-Djava.security.egd=file:/dev/./urandom -XX:+CMSClassUnloadingEnabled -XX:+CMSConcurrentMTEnabled -XX:+CMSParallelRemarkEnabled -XX:+DisableExplicitGC -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseCMSCompactAtFullCollection -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:CMSFullGCsBeforeCompaction=1 -XX:CMSInitiatingOccupancyFraction=5 -XX:MaxNewSize=300m -XX:MaxPermSize=128m -XX:NewSize=300m"

# the only args used by the rest of the script are the JAVAMEM  JAVAARGS and LOOKERARGS
if [ "${APP_DYNAMICS_ENABLED}" = "true" ]; then 
    JAVAARGS="$APP_DYNAMICS_VARS $EME_JARGS"
else
    JAVAARGS="$EME_JARGS"
fi
LOOKERARGS="--no-ssl"


