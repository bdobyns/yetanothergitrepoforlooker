#!/bin/bash
# this script is sourced as part of the looker startup script
# blame: barry@productops.com jan 2016
# BOLT-1611 deploy a looker jar via Sagoku
# /home/looker/looker/lookerstart.cfg

if [ -e /etc/profile.d/appdynamics.sh ] ; then
    . /etc/profile.d/appdynamics.sh
fi
if [ -e /etc/profile.d/sagoku.sh ] ; then
    . /etc/profile.d/sagoku.sh
fi
if [ -e /etc/profile.d/tomcat.sh ] ; then
    . /etc/profile.d/tomcat.sh
fi

# looker recommends leaving 1.5G for "everything else"
#    in the unmodified /home/looker/looker/looker startup script
# elsewhere they say 4G for looker according to the install doc
#    http://www.looker.com/docs/setup-and-management/on-prem-install/installation
#    ( note that it says 4GB at the top and later says 2.8GB in step 10 )

MEM=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'` # TOTAL MEMORY
FRE=`cat /proc/meminfo | grep MemFree | awk '{print $2}'`  # FREE MEMORY 

# tiers based on the table at the end of 
#     http://www.looker.com/docs/setup-and-management/on-prem-install/java-memory-settings
# we use the tier recommendations to calculate ratios 
if [ -z $MEM ] ; then
    # sensible default for the error case when MEM fails
    JM=3000000 # 3g
elif [ $MEM -ge 30000000 ] ; then 
    # m3.2xlarge   total=30000m  looker=26000m
    JM=`expr $MEM \* 26000 / 30000 `
elif [ $MEM -ge 15000000 ] ; then 
    # m3.xlarge   total=15000m  looker=11000m
    JM=`expr  $MEM \* 11000 / 15000 `
elif [ $MEM -ge  7500000 ] ; then 
    # m1.large   total=7500m  looker=4800m
    # m3.large   total=7500m  looker=4800m
    JM=`expr  $MEM \* 4800 / 7500 `
elif [ $MEM -ge  3750000 ] ; then 
    # m1.medium  total=3750m   looker=2300m
    # m3.medium  total=3750m   looker=2300m
    JM=`expr $MEM \* 2300 / 3750 `
elif [ $MEM -lt  3750000 ] ; then 
    # m1.small   total=1700m   looker=1200m
    JM=`expr $MEM \* 1200 / 1700 `
fi

# NEVER give looker more than the total free ram in the box at this time
if [ ! -z $FRE ] && [ $JM -gt $FRE ] ; then
    # potentially this is disaster for looker
    JM=$FRE
fi


# okay, now set the memory arg
# this is used later (inside the 'looker' script) as
#  -Xms$JAVAMEM -Xmx$JAVAMEM 
JAVAMEM="${JM}k"

# these are the args that spencer gives eme
EME_JARGS="-Djava.security.egd=file:/dev/./urandom -XX:+CMSClassUnloadingEnabled -XX:+CMSConcurrentMTEnabled -XX:+CMSParallelRemarkEnabled -XX:+DisableExplicitGC -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseCMSCompactAtFullCollection -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:CMSFullGCsBeforeCompaction=1 -XX:CMSInitiatingOccupancyFraction=5 -XX:MaxNewSize=300m -XX:MaxPermSize=128m -XX:NewSize=300m"

# only turn on app dynamics if enabled in sagoku
if [ "${APP_DYNAMICS_ENABLED}" = "true" ]; then 
    JAVAARGS="-Djava.net.preferIPv4Stack=true $APP_DYNAMICS_VARS $EME_JARGS"
else
    JAVAARGS="-Djava.net.preferIPv4Stack=true $EME_JARGS"
fi

LOOKERHOME=/home/looker
SSL=$LOOKERHOME/ssl
# this picks up the keystore we created during installation
KEYSTORE=$SSL/looker.jks
KEYPASS=$SSL/keystorepass
if [ -e $KEYSTORE ] && [ -e $KEYPASS ] ; then 
    LOOKERARGS=" --ssl-keystore $SSL/looker.jks --ssl-keystore-pass-file=$SSL/keystorepass "
else
    # this is a failure case, but should never be triggered
    LOOKERARGS=" --no-ssl "
fi

# the only args used by the 'looker' script are the JAVAMEM  JAVAARGS and LOOKERARGS

